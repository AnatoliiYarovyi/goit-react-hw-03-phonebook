{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js","components/ContactList/ContactList.module.css","App.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChenge","event","currentTarget","value","setState","reset","hendleSubmit","preventDefault","props","addContacts","this","className","style","onSubmit","label","input","onChange","type","pattern","title","required","labelNamber","button","Component","Filter","filter","onHandleChenge","ContactList","contacts","deleteContacts","list","map","id","item","textName","textNamber","onClick","App","contactFormState","contact","uuidv4","find","alert","prevState","chengeFilter","contactId","localStorage","getItem","parseContacts","JSON","parse","console","log","setItem","stringify","normalizedFilter","toLowerCase","visibleContacts","includes","conteiner","caption","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b67a5e91.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__1B0h7\",\"input\":\"Filter_input__3gdLo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__2sF5A\",\"label\":\"ContactForm_label__2Y4UZ\",\"input\":\"ContactForm_input__1m4Pw\",\"button\":\"ContactForm_button__hW18k\",\"labelNamber\":\"ContactForm_labelNamber__2uswJ\"};","import React, { Component } from \"react\";\r\nimport style from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  // ----- универсальная фунукция -----------\r\n  handleChenge = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  // -----------------------------------------\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  hendleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    this.props.addContacts(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className={style.ContactForm} onSubmit={this.hendleSubmit}>\r\n        <label className={style.label}>Name</label>\r\n        <input\r\n          className={style.input}\r\n          value={name}\r\n          onChange={this.handleChenge}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        <label className={style.labelNamber}>Number</label>\r\n        <input\r\n          className={style.input}\r\n          value={number}\r\n          onChange={this.handleChenge}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n        <button type=\"submit\" className={style.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport style from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ filter, onHandleChenge }) => {\r\n  return (\r\n    <div>\r\n      <h3 className={style.title}>Find contacts by name</h3>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={onHandleChenge}\r\n        className={style.input}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onHandleChenge: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport style from \"./ContactList.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactList = ({ contacts, deleteContacts }) => {\r\n  return (\r\n    <ul className={style.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={style.item}>\r\n          <span className={style.textName}>{name}:</span>\r\n          <span className={style.textNamber}>{number}</span>\r\n          <button\r\n            type=\"button\"\r\n            className={style.button}\r\n            onClick={() => deleteContacts(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })\r\n  ),\r\n  deleteContacts: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport style from \"./App.module.css\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContacts = (contactFormState) => {\n    const { name, number } = contactFormState;\n    const contact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n\n    const isRepeat = this.state.contacts.find(\n      ({ name }) => name === contactFormState.name\n    );\n    isRepeat\n      ? alert(`${name} is already in contacts`)\n      : this.setState((prevState) => ({\n          contacts: [contact, ...prevState.contacts],\n        }));\n  };\n  chengeFilter = (event) => {\n    const { value } = event.currentTarget;\n    this.setState({\n      filter: value,\n    });\n  };\n  deleteContacts = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n    }));\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parseContacts = JSON.parse(contacts);\n    console.log(parseContacts);\n    // if (parseContacts.includes(\"id\")) {\n    if (parseContacts) {\n      this.setState({ contacts: parseContacts });\n    }\n  }\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter, contacts } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n    const visibleContacts = contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(normalizedFilter)\n    );\n\n    return (\n      <div className={style.conteiner}>\n        <h1 className={style.title}>Phonebook</h1>\n        <ContactForm addContacts={this.addContacts} />\n\n        <h2 className={style.caption}>Contacts</h2>\n        <Filter filter={filter} onHandleChenge={this.chengeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          deleteContacts={this.deleteContacts}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3E6E7\",\"item\":\"ContactList_item__wV39r\",\"textName\":\"ContactList_textName__T6JY5\",\"textNamber\":\"ContactList_textNamber__2GvBN\",\"button\":\"ContactList_button__2Q_gC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conteiner\":\"App_conteiner__1rKxo\",\"title\":\"App_title__2nyNS\",\"caption\":\"App_caption__u6bFA\"};"],"sourceRoot":""}